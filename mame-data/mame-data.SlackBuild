#!/bin/sh
#-- mame-data for Slackware --
# Build script by Phantom X <megaphantomx at bol.com.brg>
# Suggested usage: $ mame-data.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008-2016 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Build requires p7zip and, optionally, parallel to speed up icon converting.

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}

NAME=mame-data
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-0.165}
# Pugsy cheats
MCVER=${MCVER:-0163}
# MAME History
MHVER=${MHVER:-165}
# Mameinfo
MIVER=${MIVER:-0165}
# hiscore (md5sum)
HSHASH=${HSHASH:-5418f496dc47e4051ae8e950163a7493}
# icons (md5sum)
IHASH=${IHASH:-c9202de8cca39e7f50be15dbc059e40c}

ARCH=noarch
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) ))}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

ROMSDIR=${CWD}/roms

SRCDIR=${NAME}-${VERSION}
# Distributable ROM images (non-commercial use)
SRCARCHIVE0="alienar fax gridlee hardhat looping robby supertnk \
  teetert topgunnr victory"
SRCARCHIVE1=fax2
SRCARCHIVE2=victorba

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL0="http://www.mamedev.org/roms"

# Additional data files
SRCARCHIVE10=cheat${MCVER}.zip
SRCARCHIVE11=history${MHVER}.7z
SRCARCHIVE12=Mameinfo${MIVER}.zip
HSSRCARCHIVE=hiscoredat.zip

# http://cheat.retrogames.com/
DL_URL10="http://cheat.retrogames.com/download/${SRCARCHIVE10}"
# http://www.arcade-history.com/
DL_URL11="http://www.arcade-history.com/dats/${SRCARCHIVE11}"
# http://mameinfo.mameworld.info/
DL_URL12="http://www.mameworld.info/mameinfo/download/${SRCARCHIVE12}"
# http://highscore.mameworld.info/
HSDL_URL="www.mameworld.info/highscore/${HSSRCARCHIVE}"

# Samples from http://www.mame.net/downsamples.html
SRCARCHIVE20=sdlmame-samples.tar

SRCARCHIVE30=scanlines_apertures.zip
# Artworks: Robby artwork from http://www.arcadeflyers.com/artwork/robby.zip
SRCARCHIVE31=robby-artwork.zip

#http://www.mameworld.net/mrdo/mame_artwork_supp.html
SRCARCHIVE32="effect_files.zip"

DL_URL30="http://www.mameworld.net/mrdo/mame_art/${SRCARCHIVE30}"

DL_URL32="http://www.mameworld.net/mrdo/mame_art/${SRCARCHIVE32}"

# Icons: Mamu icons from http://icons.mameworld.info/
SRCARCHIVE40=icons.zip
#SRCARCHIVE40=iconspng.tar.bz2

DL_URL40="http://icons.mameworld.info/${SRCARCHIVE40}/${SRCARCHIVE40}"

# if source is not present, download in source rootdir if possible
mkdir -p ${ROMSDIR}
( cd ${ROMSDIR} || exit 1
  for file in ${SRCARCHIVE0} ;do
    test -r ${file}.zip || ${DL_PROG} --user-agent='Mozilla/5.0 (X11)' ${DL_OPTS} ${DL_URL0}/${file}/${file}.zip || exit 1
  done
  test -r ${SRCARCHIVE1}.zip || ${DL_PROG} --user-agent='Mozilla/5.0 (X11)' ${DL_OPTS} ${DL_URL0}/fax/${SRCARCHIVE1}.zip || exit 1
  test -r ${SRCARCHIVE2}.zip || ${DL_PROG} --user-agent='Mozilla/5.0 (X11)' ${DL_OPTS} ${DL_URL0}/victory/${SRCARCHIVE2}.zip || exit 1
) || exit $?

test -r ${CWD}/${SRCARCHIVE10} || ${DL_PROG} ${DL_OPTS} ${DL_URL10} || exit 1
test -r ${CWD}/${SRCARCHIVE11} || ${DL_PROG} ${DL_OPTS} ${DL_URL11} || exit 1
test -r ${CWD}/${SRCARCHIVE12} || ${DL_PROG} --user-agent='Mozilla/5.0 (X11)' ${DL_OPTS} ${DL_URL12} || exit 1
test -r ${CWD}/${HSSRCARCHIVE} || ${DL_PROG} --user-agent='Mozilla/5.0 (X11)' ${DL_OPTS} ${HSDL_URL} || exit 1

#test -r ${CWD}/${SRCARCHIVE30} || ${DL_PROG} ${DL_OPTS} ${DL_URL30} || exit 1
#test -r ${CWD}/${SRCARCHIVE32} || ${DL_PROG} ${DL_OPTS} ${DL_URL30} || exit 1

test -r ${CWD}/${SRCARCHIVE40} || ${DL_PROG} ${DL_OPTS} ${DL_URL40} || exit 1

if [ "$(md5sum ${CWD}/${HSSRCARCHIVE} | awk '{print $1}')" != "${HSHASH}" ] ;then
  echo "${CWD}/${HSSRCARCHIVE} md5sum do not match HSHASH."
  echo "If it is older, delete it, if newer, update HSHASH with a new md5sum."
  exit 1
fi

[ "$1" = "--dlsrc" ] && exit 0

if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi
if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
mkdir -p ${SRCDIR} || exit 1
cd ${SRCDIR} || exit 1

zcat ${CWD}/sdlmame-data-README.Fedora.gz > ./README.Fedora || exit 1

# extract ROM readme files
for file in ${SRCARCHIVE0} ;do
  if [ "${file}" == "alienar" ] ; then
    unzip -qa ${ROMSDIR}/${file}.zip Aareadme.txt -d . || exit 1
    mv Aareadme.txt README.${file} || exit 1
  elif [ "${file}" = "gridlee" ] && [ "${file}" = "robby" ]  ; then
    unzip -qa ${ROMSDIR}/${file}.zip readme.txt -d . || exit 1
    mv readme.txt README.${file} || exit 1
  fi
done

# extract DAT files
unzip ${CWD}/${SRCARCHIVE10} || exit 1
7z x ${CWD}/${SRCARCHIVE11} || exit 1
unzip -qa ${CWD}/${SRCARCHIVE12} -d . || exit 1
7z x Mameinfo${MIVER}.7z || exit 1
mv docs mameinfo || exit 1
unzip -qa ${CWD}/${HSSRCARCHIVE} -d . || exit 1

# fix permissions and line endings
chmod -R u+w,go+r-w,a-s .

chmod 0644 README.* mameinfo/*.txt
chmod 0755 mameinfo
sed -i 's/\r//' cheat.txt hiscoredat_readme.txt mameinfo/*
sed -i 's/\r//' hiscore.dat history.dat mameinfo.dat

# zcat ${CWD}/${NAME}.patch.gz | patch -p0 -E --backup --verbose || exit 1

# Install ROMs
mkdir -p ${PKG}/usr/share/mame/roms
for file in ${SRCARCHIVE0} ${SRCARCHIVE1} ${SRCARCHIVE2} ;do
  install -pm 0644 ${ROMSDIR}/${file}.zip \
    ${PKG}/usr/share/mame/roms/ || exit 1
done

# Install DAT files
install -pm 644 hiscore.dat history.dat mameinfo.dat \
  ${PKG}/usr/share/mame/ || exit 1

# Install cheat files
mkdir -p ${PKG}/usr/share/mame/cheat
install -pm0644 cheat.7z ${PKG}/usr/share/mame/ || exit 1

# Install Samples
if [ -r ${CWD}/${SRCARCHIVE20} ] ;then
mkdir -p ${PKG}/usr/share/mame/samples
tar --extract --directory ${PKG}/usr/share/mame/samples/ \
    --file ${CWD}/${SRCARCHIVE20} || exit 1
fi

# Install Artwork
mkdir -p ${PKG}/usr/share/mame/artwork

if [ -r ${CWD}/${SRCARCHIVE31} ] ;then
#unzip ${CWD}/${SRCARCHIVE30} -d ${PKG}/usr/share/mame/artwork/
install -pm 644 ${CWD}/${SRCARCHIVE31} \
  ${PKG}/usr/share/mame/artwork/robby.zip || exit 1
fi

if [ -r ${CWD}/${SRCARCHIVE32} ] ;then
  unzip ${CWD}/${SRCARCHIVE32} -d ${PKG}/usr/share/mame/artwork/ || exit 1
  chmod 0644 ${PKG}/usr/share/mame/artwork/*.png
fi

# Install Icons
mkdir -p ${PKG}/usr/share/mame/icons
unzip ${CWD}/${SRCARCHIVE40} -d icons || exit 1
chmod -R u+w,go+r-w,a-s icons
sed 's/\r//' icons/*READ.txt > README.icons
( cd icons
  rm -f '('*.ico
  rm -f '!'*.ico
  if [ -x /usr/bin/parallel ] ;then
    export PKG
    ls *.ico | parallel -j${NJOBS} 'echo "Converting {} to {.}.png..." ; convert "{}"[1] "${PKG}/usr/share/mame/icons/{.}.png"' || exit $?
  else
  for i in *.ico ;do
    pngico="${i%ico}png"
    echo "Converting ${i} to ${pngico}..."
    convert ${i}[1] ${PKG}/usr/share/mame/icons/${pngico} || exit $?
  done
  fi
) || exit $?
chmod 0644 ${PKG}/usr/share/mame/icons/*.png

# Empty dirs
for file in cab snap ;do
  mkdir -p ${PKG}/usr/share/mame/${file}
  touch ${PKG}/usr/share/mame/${file}/dummy.txt
done

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  cheat.txt hiscoredat_readme.txt mameinfo README.alienar README.gridlee README.robby \
  README.Fedora README.icons ${CWD}/ChangeLog.SB ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/*README.Fedora.gz ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
                 ${SBDIR}/${NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution
set -e

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
