#!/bin/sh
#-- receitanet for Slackware --
# Build script by Phantom X <megaphantomx at bol.com.br>
# Suggested usage: $ receitanet.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008-2015 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.receita.fazenda.gov.br

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}

PNAME=Receitanet
NAME=receitanet
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-1.07}
ARCH=noarch
if [ -e /lib64/libc.so.6 ] ;then
  PARCH=-x64
else
  PARCH=""
fi
SLKTARGET=${SLKTARGET:-x86_64}
SLKDTARGET=${SLKDTARGET:-slackware}
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/rfb/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${PNAME}-${VERSION}
SRCARCHIVE=${SRCDIR}${PARCH}.bin

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://www.receita.fazenda.gov.br/Publico/programas/${NAME}/${SRCARCHIVE}"

# if source is not present, download in source rootdir if possible
test -r ${CWD}/${SRCARCHIVE} || ${DL_PROG} ${DL_OPTS} ${DL_URL} || exit 1

[ "$1" = "--dlsrc" ] && exit 

if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi
if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
mkdir ${SRCDIR}
cd ${SRCDIR} || exit 1
install -pm0755 ${CWD}/${SRCARCHIVE} .
# This is intended to give error
TMP=${TMP}/${SRCDIR} fakeroot ./${SRCARCHIVE} --response-file ${CWD}/receitanet-response-file --mode silent --prefix ${TMP}/${SRCDIR}

chmod -R u+w,go+r-w,a-s .

if [ -r ${CWD}/apply-patches.sh ]; then
  . ${CWD}/apply-patches.sh
fi

mv ijtmp_* ijtmp || exit 1

mkdir -p ${PKG}/usr/share/ProgramasRFB/${NAME}
cp -a imagens lib ${NAME}.{dat,jar} ${PKG}/usr/share/ProgramasRFB/${NAME}/ || exit $?

find ${PKG}/usr/share/ProgramasRFB/${NAME} -type d | xargs chmod 0755 2> /dev/null

mkdir -p ${PKG}/usr/bin
cat > ${PKG}/usr/bin/${NAME} <<'EOF'
#!/bin/sh

RFB_ARCH=$(uname -m)
case ${RFB_ARCH} in
  x86_64 | ia64 | s390 )
    PRIMARY_LIB_DIR="/usr/lib64"
    SECONDARY_LIB_DIR="/usr/lib"
    ;;
  * )
    PRIMARY_LIB_DIR="/usr/lib"
    SECONDARY_LIB_DIR="/usr/lib64"
    ;;
esac

if [ -z "${JAVA_HOME}" ] ;then
  if [ ! -d ${PRIMARY_LIB_DIR}/java ]; then
    if [ ! -x ${SECONDARY_LIB_DIR}/java ]; then
      echo "Error: ${PRIMARY_LIB_DIR}/java not found"
      if [ -d ${SECONDARY_LIB_DIR}/java ]; then
        echo "       ${SECONDARY_LIB_DIR}/java not found"
      fi
      exit 1
    fi
    PRIMARY_LIB_DIR="${SECONDARY_LIB_DIR}"
  fi
fi

JAVA_HOME=${JAVA_HOME:-${PRIMARY_LIB_DIR}/java}

JAVABIN="${JAVA_HOME}/bin/java"

if [ -x "${JAVABIN}" ] ;then
  exec "${JAVABIN}" -jar /usr/share/ProgramasRFB/receitanet/receitanet.jar "${@}"
fi
echo "Couldn't run Receitanet. Is PRIMARY_LIB_DIR set? JAVA_HOME/bin/java is missing?"
exit 1
EOF
chmod 0755 ${PKG}/usr/bin/${NAME} || exit 1

mkdir -p ${PKG}/usr/share/applications

SB_DFI(){
desktop-file-install \
  --vendor="rfb" --mode 0644 \
  --dir ${PKG}/usr/share/applications \
  --add-category "Office" \
  --add-category "X-rfb" \
  --add-category "X-receitanet" "$@"
}

SB_DFI \
  --set-name="${PNAME}" \
  --set-key="Exec" \
  --set-value="${NAME}" \
  --set-icon="${NAME}" \
  ijtmp/rfb-${NAME}_program.desktop || exit 1

SB_DFI \
  --set-name="Ajuda do ${PNAME}" \
  --set-key="Exec" \
  --set-value="${NAME} -ajuda" \
  --set-icon="${NAME}_ajuda" \
  --remove-key="Comment" \
  ijtmp/rfb-${NAME}_ajuda.desktop || exit 1

mkdir -p ${PKG}/etc/xdg/menus/applications-merged
install -pm0644 ${CWD}/rfb.menu \
  ${PKG}/etc/xdg/menus/applications-merged/rfb.menu || exit 1

mkdir -p ${PKG}/usr/share/desktop-directories
cp ijtmp/rfb-ProgramasRFB.directory \
  ${PKG}/usr/share/desktop-directories/rfb-programas.directory || exit 1
desktop-file-install --delete-original --vendor="rfb" \
   --dir ${PKG}/usr/share/desktop-directories \
   --remove-key="Encoding" \
   --remove-key="Categories" \
   --set-icon="${NAME}" \
   ${PKG}/usr/share/desktop-directories/rfb-programas.directory || exit 1

mkdir -p ${PKG}/usr/share/icons/hicolor/32x32/apps
convert imagens/Receitanet.xpm \
  ${PKG}/usr/share/icons/hicolor/32x32/apps/${NAME}.png || exit 1

convert imagens/Ajuda.xpm \
  ${PKG}/usr/share/icons/hicolor/32x32/apps/${NAME}_ajuda.png || exit 1

for res in 16 20 22 24 ;do
  dir=${PKG}/usr/share/icons/hicolor/${res}x${res}/apps
  mkdir -p ${dir}
  convert imagens/Receitanet.xpm -filter Lanczos -resize ${res}x${res} \
    ${dir}/${NAME}.png || exit 1
  convert imagens/Receitanet.xpm -filter Lanczos -resize ${res}x${res} \
    ${dir}/${NAME}_ajuda.png || exit 1
done

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
[ -r ChangeLog ] && head -n 1000 ChangeLog > ${DOCDIR}/ChangeLog
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644
find ${DOCDIR}/ -type f -size 0 -print0 | xargs -0 rm -f

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm -f ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
#!/bin/sh
# Figure out our root directory
ROOTDIR=\$(pwd)
unset CHROOT
if test "\${ROOTDIR}" != "/"; then
  CHROOT="chroot \${ROOTDIR} "
  ROOTDIR="\${ROOTDIR}/"
fi
if [ -x usr/bin/update-desktop-database ]; then
  \${CHROOT} /usr/bin/update-desktop-database 1> /dev/null 2> /dev/null
fi
if [ -x usr/bin/gtk-update-icon-cache ]; then
  \${CHROOT} /usr/bin/touch --no-create /usr/share/icons/hicolor >/dev/null 2>&1
  \${CHROOT} /usr/bin/gtk-update-icon-cache -q /usr/share/icons/hicolor > /dev/null 2>&1
fi
EOF

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
  ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}/patches
  install -pm0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
    ${CWD}/apply-patches.sh ${CWD}/rfb.menu ${CWD}/receitanet-response-file ${SBDIR}/
  install -pm0755 ${CWD}/${NAME}.SlackBuild \
    ${SBDIR}/${NAME}.SlackBuild
  install -pm0644 ${CWD}/patches/*.* \
    ${SBDIR}/patches/
  rmdir ${SBDIR}/patches
fi

# Build package:
set +o xtrace        # no longer print commands upon execution
set -e

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
