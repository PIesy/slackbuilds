#!/bin/sh
#-- kmod-vbox for Slackware --
# Build script by Phantom X <megaphantomx at bol.com.brg>
# Suggested usage: $ kmod-vbox-custom.SlackBuild 2>&1 | tee build-custom.log
#--
# Copyright 2008-2015 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://www.virtualbox.org/wiki/VirtualBox

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

KERNNAME=${KERNNAME:-custom}
PNAME=vbox-kernel-module
NAME=kmod-vbox-${KERNNAME}
SB_NAME=$(echo ${NAME} | sed "s|${KERNNAME}$|custom|g")
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-5.0.8}
RVER=$(echo ${VERSION} | cut -d- -f1)
ARCH=${ARCH:-$(uname -m)}
if [ "${ARCH}" = "x86_64" ] ;then
  DARCH=amd64
else
  DARCH=x86
fi
BUILD=${BUILD:-1}
KVERSION=${KVERSION:-$(uname -r)}
PKVERSION="$(echo ${KVERSION} | tr - _ )"
KMODDIR=${PKG}/lib/modules/${KVERSION}/extra/$(echo ${NAME} |cut -d - -f2)
SBDIR=${PKG}/usr/src/slackbuilds/kernel-kmod/${NAME}-${VERSION}_${KVERSION}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )_${PKVERSION}-${ARCH}-${BUILD}${PACKAGER_ID}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${PNAME}-src-${VERSION}
SRCARCHIVE=${SRCDIR}.tar.xz

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://dev.gentoo.org/~polynomial-c/virtualbox/${SRCARCHIVE}"

# if source is not present, download in source rootdir if possible
if [ -r /usr/share/virtualbox/vbox-kmod-src-${VERSION} ] ;then
  SRCDIR=vbox-kmod-src-${VERSION}
  MSRCDIR=/usr/share/virtualbox/${SRCDIR}
  MSRCSDIR=YES
else
  MSRCSDIR=NO
  test -r ${CWD}/${SRCARCHIVE} || ${DL_PROG} ${DL_OPTS} ${DL_URL} || exit 1
fi

unset LDFLAGS CFLAGS CXXFLAGS CPPFLAGS
export BINUTILS_LD=bfd

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${KMODDIR}

cd ${TMP}
rm -rf ${SRCDIR}
if [ "${MSRCSDIR}" = "YES" ] ;then
  cp -r ${MSRCDIR} ${SRCDIR} || exit 1
else
  mkdir ${SRCDIR} || exit 1
  tar xvf ${CWD}/${SRCARCHIVE} -C ${SRCDIR} || exit 1
fi
cd ${SRCDIR} || exit 1

chmod -R u+w,go+r-w,a-s .

# zcat ${CWD}/${NAME}.patch.gz | patch -p0 -E --backup --verbose || exit 1

for module in vboxdrv vboxnetadp vboxnetflt vboxpci ;do
 ( cd ${module} || exit 1
   make KERN_DIR=/lib/modules/${KVERSION}/build clean
   make KERN_DIR=/lib/modules/${KVERSION}/build || exit $?
   install -m0644 ${module}.ko \
  ${KMODDIR}/ || exit $?
  ) || exit $?
done

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required | sed -e "s|_VERSION_|${VERSION}|g" \
  > ${PKG}/install/slack-required
echo "kernel-${KERNNAME} = ${PKVERSION}-${ARCH}-$( echo ${PKVERSION} | cut -d _ -f2 )" >> \
     ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
# A good idea whenever kernel modules are added or changed:
if [ -x sbin/depmod ]; then
  chroot . /sbin/depmod -a ${KVERSION} 1> /dev/null 2> /dev/null
fi
EOF

sed -i "s|_KERNNAME|${KERNNAME}|g;
        s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
                 ${CWD}/*.patch.gz ${SBDIR}/
  install -m0755 ${CWD}/${SB_NAME}.SlackBuild \
                 ${SBDIR}/${SB_NAME}.SlackBuild
fi

# Build package:
set +o xtrace        # no longer print commands upon execution

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
