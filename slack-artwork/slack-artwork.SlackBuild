#!/bin/sh
#-- slack-artwork for Slackware --
# Build script by Phantom X <megaphantomx at bol.com.br>
# Suggested usage: $ slack-artwork.SlackBuild 2>&1 | tee build.log
#--
# Copyright 2008-2015 Phantom X, Goiania, Brazil.
# Copyright 2006 Martijn Dekker, Groningen, Netherlands.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# http://github.com/PhantomX/slackbuilds

PACKAGER_ID=${PACKAGER_ID:-$USER}
PACKAGER=${PACKAGER:-$USER@$HOSTNAME}

# Set to YES to replicate slackbuild and patches
SB_REP=${SB_REP:-YES}

CWD=$(pwd)
TMP=${TMP:-/tmp}
if [ ! -d ${TMP} ]; then
  mkdir -p ${TMP}
fi

NAME=slack-artwork
PKG=${PKG:-${TMP}/package-${NAME}}

VERSION=${VERSION:-1.35.2}
SSLDVER=${SSLDVER:-1.1}
ARCH=noarch
if [ "${ARCH}" = "x86_64" ] ;then
  SLKTARGET=${SLKTARGET:-x86_64}
else
  SLKTARGET=${SLKTARGET:-i586}
fi
SLKDTARGET=${SLKDTARGET:-slackware}
SLKDIST=${SLKDIST:-Slackware}
BUILD=${BUILD:-1}
NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}
DOCDIR=${PKG}/usr/doc/${NAME}-${VERSION}
SBDIR=${PKG}/usr/src/slackbuilds/${NAME}
PKGDEST=${PKGDEST:-${CWD}}
PKGFORMAT=${PKGFORMAT:-txz}
PKGNAME=${NAME}-$(echo ${VERSION} | tr - . )-${ARCH}-${BUILD}${PACKAGER_ID}

# Default logo (must be in png)
SB_LOGO=${SB_LOGO:-slack}
# Default logo with text (must be in png)
SB_LOGOTXT=${SB_LOGOTXT:-chinfo}
# Default kdm theme
SB_KDM=${SB_KDM:-oxygen-air}
# Default ksplash
SB_KS=${SB_KS:-Default}
# Default sddm theme
SB_SDDM=${SB_SDDM:-circles}
# Default wallpaper
SB_WP=${SB_WP:-EyeOfSlackware.png}
# Default grub background
SB_WPG=${SB_WPG:-chinfo-grub.png}
# Set default browser
SB_BROWSERB=${SB_BROWSERB:-firefox}
# Set default mail client
SB_MAILB=${SB_MAILB:-claws-mail}

DATE=$(LC_ALL=C date +%d-%b-%Y)

SRCDIR=${NAME}-${VERSION}
SRCARCHIVE=${SRCDIR}.tar.xz
SSLDSRCARCHIVE=24302-slackware_shield-${SSLDVER}.tar.bz2

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_URL="http://dl.bintray.com/phantomx/tarballs/${NAME}/${SRCARCHIVE}"
SSLDDL_URL="http://www.kde-look.org/CONTENT/content-files/${SSLDSRCARCHIVE}"
KGDL_URL="http://stimpyrama.org/downloads/doc_download/80-slackware-kdmgears"

# if source is not present, download in source rootdir if possible, or in /tmp
test -r ${CWD}/${SRCARCHIVE} || echo "See ${CWD}/README" || exit 1
test -r ${CWD}/${SSLDSRCARCHIVE} || ${DL_PROG} ${DL_OPTS} ${SSLDDL_URL} || exit 1

[ -r ../KDE.options ] && source ../KDE.options

_kde4_prefix=${_kde4_prefix:-/usr}
_kde4_sysconfdir=${_kde4_sysconfdir:-/etc}
_kde4_sharedir=${_kde4_sharedir:-/usr/share}
_kde4_appsdir=${_kde4_appsdir:-${_kde4_sharedir}/kde4/apps}
_kde4_iconsdir=${_kde4_iconsdir:-${_kde4_sharedir}/icons}

_kde3_configdir=${_kde3_configdir:-/usr/share/kde3/config}
_kde3_appsdir=${_kde3_appsdir:-/usr/share/kde3/apps}

if [ -d ${PKG} ]; then
  # Clean up a previous build
  rm -rf ${PKG}
fi
mkdir -p ${PKG}

cd ${TMP}
rm -rf ${SRCDIR}
tar -xvf ${CWD}/${SRCARCHIVE} || exit 1
cd ${SRCDIR} || exit 1
tar -xvf ${CWD}/${SSLDSRCARCHIVE} || exit 1

chmod -R u+w,go+r-w,a-s .

# zcat ${CWD}/${NAME}.patch.gz | patch -p0 -E --backup --suffix --verbose || exit 1

mkdir -p ${PKG}/${_kde4_appsdir}/color-schemes
install -pm0644 color-schemes/*.colors ${PKG}/${_kde4_appsdir}/color-schemes/ || exit 1

mkdir -p ${PKG}/${_kde4_appsdir}/QtCurve
install -pm0644 qtcurve/*.qtcurve ${PKG}/${_kde4_appsdir}/QtCurve/ || exit 1

mkdir ksplash
mv slackware_shield ksplash/SlackwareShield
rm -f kdm/*/*.orig

mkdir -p ${PKG}/${_kde4_appsdir}/kdm/themes
#cp -a kdm/* ${PKG}/usr/share/apps/kdm/themes/ || exit 1

[ -d ${PKG}/${_kde4_appsdir}/kdm/themes/${SB_KDM} ] || SB_KDM=oxygen-air
ln -s ${SB_KDM} ${PKG}/${_kde4_appsdir}/kdm/themes/slk-default

mkdir -p ${PKG}/${_kde4_appsdir}/ksplash/Themes

[ -d ${PKG}/${_kde4_appsdir}/ksplash/Themes/${SB_KS} ] || SB_KS=Default
ln -s ${SB_KS} ${PKG}/${_kde4_appsdir}/ksplash/Themes/Slk-Default

mkdir -p ${PKG}/usr/share/sddm/themes
[ -d ${PKG}/usr/share/sddm/themes/${SB_SDDM} ] || SB_SDDM=circles
ln -s ${SB_SDDM} ${PKG}/usr/share/sddm/themes/slk-default

mkdir -p ${PKG}/usr/share/wallpapers
install -m0644 wallpapers/*.png* ${PKG}/usr/share/wallpapers/ || exit 1

[ -f ${PKG}/usr/share/wallpapers/${SB_WP} ] || SB_WP=EyeOfSlackware.png
WPEXT="$(echo ${SB_WP}|awk -F"." '{print $NF}')"

[ -f ${PKG}/usr/share/wallpapers/${SB_WP} ] || SB_WP=slackware-grub.png
WPGEXT="$(echo ${SB_WPG}|awk -F"." '{print $NF}')"

( cd ${PKG}/usr/share/wallpapers || exit 1
  WPAUTHOR="$(grep -m 1 ^Author ${SB_WP}.desktop |sed -e 's|^Author=||g')"
  sed -i -e "s|_WPEXT|${WPEXT}|g;s|BG_SLK_DIST|${SLKDIST}|g;s|_WPAUTHOR|${WPAUTHOR}|g" \
             ./slk-default.png.desktop || exit 1
  ln -s ${SB_WP} ${PKG}/usr/share/wallpapers/slk-default.${WPEXT} || exit 1
) || exit 1

mkdir -p ${PKG}/usr/share/gnome-background-properties
sed -e "s|_WPEXT|${WPEXT}|g;s|BG_SLK_DIST|${SLKDIST}|g" \
  wallpapers/desktop-backgrounds-slack.xml \
  > ${PKG}/usr/share/gnome-background-properties/desktop-backgrounds-slack.xml || exit 1

mkdir -p ${PKG}/usr/share/backgrounds/images
( cd ${PKG}/usr/share/backgrounds/images
  ln -sf ../../wallpapers/*.png . || exit 1
) || exit 1

for res in 16 20 22 24 32 36 48 64 72 96 128 ;do
  dir=${PKG}/usr/share/icons/hicolor/${res}x${res}/apps
  mkdir -p ${dir}
  install -m0644 icons/${SB_LOGO}-logo-icon-${res}.png \
                 ${dir}/${SB_LOGO}-logo-icon.png || exit 1
  ln -s ${SB_LOGO}-logo-icon.png ${dir}/slk-default-logo-icon.png
  ln -s slk-default-logo-icon.png ${dir}/icon-panel-menu.png
  ln -s slk-default-logo-icon.png ${dir}/gnome-main-menu.png
  ln -s slk-default-logo-icon.png ${dir}/kmenu.png
  ln -s slk-default-logo-icon.png ${dir}/start-here.png
  ln -s slk-default-logo-icon.png ${dir}/start-here-kde.png
  ln -s slk-default-logo-icon.png ${dir}/start-here-kde-slk.png
  ln -s slk-default-logo-icon.png ${dir}/xfce4-panel-menu.png
done

mkdir -p ${PKG}/usr/share/pixmaps
install -m0644 icons/xfce-slack-logo.png \
               ${PKG}/usr/share/pixmaps/ || exit 1

install -m0644 icons/*-logo-white*.png \
  ${PKG}/usr/share/pixmaps/ || exit 1

ln -s ${SB_LOGOTXT}-logo-white.png \
  ${PKG}/usr/share/pixmaps/slk-logo-white.png || exit 1

mkdir -p ${PKG}/usr/share/gtk-2.0
cat > ${PKG}/usr/share/gtk-2.0/gtkrc <<'EOF'
gtk-theme-name = "Clearlooks"
gtk-icon-theme-name = "Bluecurve"
gtk-fallback-icon-theme = "gnome"
gtk-toolbar-style = GTK_TOOLBAR_ICONS
EOF

mkdir -p ${PKG}/usr/share/gtk-3.0
cat > ${PKG}/usr/share/gtk-3.0/settings.ini <<'EOF'
[Settings]
gtk-theme-name = Adwaita
gtk-icon-theme-name = Bluecurve
gtk-cursor-theme-name = Bluecurve
gtk-toolbar-style = GTK_TOOLBAR_ICONS
EOF

mkdir -p ${PKG}/usr/share/glib-2.0/schemas
install -pm0644 defaults/gsettings/*.gschema.override \
  ${PKG}/usr/share/glib-2.0/schemas/ || exit 1

mkdir -p ${PKG}/usr/share/icons/default
cat > ${PKG}/usr/share/icons/default/index.theme.new << 'EOF'
[Icon Theme]
Inherits=Bluecurve
Hidden=true
EOF

( cd defaults/xfce
  mkdir -p ${PKG}/etc/xdg/xfce4/panel
  sed -e "s|XFCE_SLK_DIST|${SLKDIST}|g" xfce4-menu-5.rc \
    > ${PKG}/etc/xdg/xfce4/panel/xfce4-menu-5.rc.new || exit 1

  mkdir -p ${PKG}/etc/xdg/xfce4/xfconf/xfce-perchannel-xml
  for f in xfce4-desktop.xml xfce4-session.xml xsettings.xml ;do
    install -m0644 ${f} \
      ${PKG}/etc/xdg/xfce4/xfconf/xfce-perchannel-xml/${f}.new || exit 1
  done

  sed -i -e "s|_WPEXT|${WPEXT}|g" \
    ${PKG}/etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml.new || exit 1

  sed -e "s|_SB_BROWSERB_|${SB_BROWSERB}|g;s|_SB_MAILB_|${SB_MAILB}|g" helpers.rc \
    > ${PKG}/etc/xdg/xfce4/helpers.rc.new || exit 1
) || exit 1

if [ "${_kde4_sysconfdir}" = "/etc" ] ;then
  kdmdir=${_kde4_sysconfdir#\/}/kde/kdm
else
  kdmdir=${_kde4_sysconfdir#\/}/kdm
fi

mkdir -p ${PKG}/etc/kde/{env,kdm}

for f in kde4rc kderc ; do
  install -m0644 defaults/kde4/etc/${f} ${PKG}/etc/${f}.new || exit 1
done
install -m0644 defaults/kde4/etc/kdmrc \
  ${PKG}/etc/kde/kdm/kdmrc.new || exit 1

install -pm0755 defaults/kde4/etc/gtk2_rc_files.sh \
  ${PKG}/etc/kde/env/gtk2_rc_files.sh.new || exit 1

mkdir -p ${PKG}/usr/share/kde-settings/kde-profile/default
sed -i -e "s|KI_SLK_DIST|${SLKDIST}|g" \
  defaults/kde4/kde-settings/share/config/kdeglobals || exit 1

cp -r defaults/kde4/kde-settings/{*,.kdeprofile} \
  ${PKG}/usr/share/kde-settings/kde-profile/default/ || exit 1

for res in 16 22 24 32 36 48 64 96 128 ;do
  dir=${PKG}/${_kde4_iconsdir}/oxygen
#  dir=${PKG}/usr/share/kde-settings/kde-profile/default/share/icons/oxygen
  mkdir -p ${dir}/${res}x${res}/places
  install -pm0644 icons/${SB_LOGO}-logo-icon-${res}.png \
    ${dir}/${res}x${res}/places/start-here-kde-slk.png || exit 1
#  ln -s ../../../../../../../../icons/hicolor/${res}x${res}/apps/slk-default-logo-icon.png \
#    ${dir}/${res}x${res}/places/start-here.png || exit 1
#  ln -s ../../../../../../../../icons/hicolor/${res}x${res}/apps/slk-default-logo-icon.png \
#    ${dir}/${res}x${res}/places/start-here-kde.png || exit 1
done

touch ${PKG}/usr/share/kde-settings/kde-profile/default/share/applications/mimeinfo.cache

mkdir -p ${PKG}/var/lib/kdm
mkdir -p ${PKG}/var/run/kdm
mkdir -p ${PKG}/var/run/sddm
mkdir -p ${PKG}/var/run/xdmctl
mkdir -p ${PKG}/var/spool/gdm

chmod 0711 ${PKG}/var/run/kdm ${PKG}/var/run/sddm ${PKG}/var/run/xdmctl

install -pm0644 defaults/kde4/var/backgroundrc \
  ${PKG}/var/lib/kdm/backgroundrc.new || exit 1

mkdir -p ${PKG}/${_kde3_configdir} \
  ${PKG}/${_kde3_appsdir}/kdisplay/color-schemes
for f in kdeglobals mediamanagerrc kdewizardrc konsolerc korgacrc kstylerc ktiprc ;do
  install -m0644 defaults/kde3/${f} ${PKG}/${_kde3_configdir}/${f}.new || exit 1
done
install -m0644 defaults/kde3/*.kcsrc \
    ${PKG}/${_kde3_appsdir}/kdisplay/color-schemes/

mkdir -p ${PKG}/etc/sddm
install -pm 0755 defaults/sddm/sddm.conf \
  ${PKG}/etc/sddm/sddm.conf.new || exit 1

mkdir -p ${PKG}/usr/share/slim/themes/slk-default
install -pm0644 defaults/slim/*.* \
                ${PKG}/usr/share/slim/themes/slk-default/ || exit 1
ln -s ../../../wallpapers/slk-default.${WPEXT} \
      ${PKG}/usr/share/slim/themes/slk-default/background.${WPEXT} || exit 1

mkdir -p ${PKG}/usr/share/pixmaps/splash
install -m0644 defaults/gnome-splash.png \
         ${PKG}/usr/share/pixmaps/splash/gnome-splash-slk.png || exit 1
ln -s gnome-splash-slk.png ${PKG}/usr/share/pixmaps/splash/gnome-splash.png

mkdir -p ${PKG}/usr/share/pixmaps/xfce4-session
install -pm0644 ksplash/SlackwareShield/splash_top.png \
  ${PKG}/usr/share/pixmaps/xfce4-session/xfce4-splash-slk.png || exit 1

mkdir -p ${PKG}/etc/lxdm
sed -e "s|_WPEXT|${WPEXT}|g" defaults/lxde/lxdm.conf \
  > ${PKG}/etc/lxdm/lxdm.conf.new || exit 1

mkdir -p ${PKG}/usr/share/lxde/pcmanfm
sed -e "s|_WPEXT|${WPEXT}|g" defaults/lxde/main.lxde \
  > ${PKG}/usr/share/lxde/pcmanfm/main.lxde.new  || exit 1

mkdir -p ${PKG}/etc/xdg/lxqt
sed -e "s|_WPEXT|${WPEXT}|g" defaults/lxqt/session.conf \
  > ${PKG}/etc/xdg/lxqt/session.conf.new || exit 1

mkdir -p ${PKG}/etc/xdg/pcmanfm-qt/lxqt
sed -e "s|_WPEXT|${WPEXT}|g" defaults/lxqt/pcmanfm-qt-settings.conf \
  > ${PKG}/etc/xdg/pcmanfm-qt/lxqt/settings.conf.new || exit 1

mkdir -p ${PKG}/usr/share/grub
install -pm0644 grub/*.png ${PKG}/usr/share/grub/ || exit 1
ln -s ${SB_WPG} ${PKG}/usr/share/grub/slk-grub-default.${WPEXT}

mkdir -p ${PKG}/etc/grub.d
cat defaults/grub_slk_theme | sed "s|_SLKDIST_|${SLKDIST}|g" \
  > ${PKG}/etc/grub.d/05_slk_theme.new || exit 1
chmod 0755 ${PKG}/etc/grub.d/05_slk_theme.new

mkdir -p ${PKG}/etc/default
cat > ${PKG}/etc/default/grub-gfx.new <<'EOF'
# If you change this file, run 'update-grub' afterwards to update
# /boot/grub/grub.cfg.

# Set default background
GRUB_WALLPAPER="/usr/share/grub/slk-grub-default.png"

# Set default colors
GRUB_COLOR_NORMAL="light-blue/black"
GRUB_COLOR_HIGHLIGHT="light-cyan/blue"
EOF

mkdir -p ${PKG}/usr/lib/tmpfiles.d
cat > ${PKG}/usr/lib/tmpfiles.d/slk-artwork.conf <<EOF
d /run/kdm/ 0711 root root -
d /run/xdmctl 0711 root root -
EOF

# Add a documentation directory:
mkdir -p ${DOCDIR}
cp -a \
  AUTHORS COPYING propaganda/ ${CWD}/ChangeLog.SB \
  ${DOCDIR}/
find ${DOCDIR}/ -type d -print0 | xargs -0 chmod 0755
find ${DOCDIR}/ -type f -print0 | xargs -0 chmod 0644

# Compress and link manpages, if any:
if [ -d ${PKG}/usr/share/man ]; then
  mv ${PKG}/usr/share/man ${PKG}/usr/man
  rmdir ${PKG}/usr/share
fi
if [ -d ${PKG}/usr/man ]; then
  ( cd ${PKG}/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd ${manpagedir}
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink ${eachpage} ).gz ${eachpage}.gz
          rm -f ${eachpage}
        done
        gzip -9 *.?
        # Prevent errors
        rm -f *.gz.gz
      )
    done
  )
fi

mkdir -p ${PKG}/install
cat ${CWD}/slack-desc > ${PKG}/install/slack-desc
cat ${CWD}/slack-required > ${PKG}/install/slack-required

cat > ${PKG}/install/doinst.sh <<EOF
# Figure out our root directory
ROOTDIR=\$(pwd)
unset CHROOT
if test "\${ROOTDIR}" != "/"; then
  CHROOT="chroot \${ROOTDIR} "
  ROOTDIR="\${ROOTDIR}/"
fi
if [ -x usr/bin/glib-compile-schemas ] ;then
  \${CHROOT} /usr/bin/glib-compile-schemas /usr/share/glib-2.0/schemas &> /dev/null
fi
if [ -x usr/bin/update-desktop-database ]; then
  \${CHROOT} /usr/bin/update-desktop-database /usr/share/applications >/dev/null 2>&1
fi
if [ -x usr/bin/gtk-update-icon-cache ]; then
  \${CHROOT} /usr/bin/touch --no-create /usr/share/icons/hicolor >/dev/null 2>&1
  \${CHROOT} /usr/bin/touch --no-create ${_kde4_iconsdir}/oxygen >/dev/null 2>&1
  \${CHROOT} /usr/bin/gtk-update-icon-cache /usr/share/icons/hicolor >/dev/null 2>&1
  \${CHROOT} /usr/bin/gtk-update-icon-cache ${_kde4_iconsdir}/oxygen >/dev/null 2>&1
fi
if [ -x usr/bin/update-mime-database ]; then
  \${CHROOT} /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi
config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then
    # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}

if [ -r etc/grub.d/05_slk_theme -a -r etc/grub.d/05_slk_theme.new ]; then
  chmod --reference=etc/grub.d/05_slk_theme etc/grub.d/05_slk_theme.new
fi
if [ -r ${_kde4_sysconfdir#\/}/env/gtk2_rc_files.sh -a -r ${_kde4_sysconfdir#\/}/env/gtk2_rc_files.sh.new ]; then
  chmod --reference=${_kde4_sysconfdir#\/}/env/gtk2_rc_files.sh ${_kde4_sysconfdir#\/}/env/gtk2_rc_files.sh.new
fi

## List of conf files to check.  The conf files in your package should end in .new
EOF

( cd ${PKG}
  find etc/ -name '*.new' -exec echo config {} ';' | sort >> ${PKG}/install/doinst.sh
  find usr/ -name '*.new' -exec echo config {} ';' | sort >> ${PKG}/install/doinst.sh
  find var/ -name '*.new' -exec echo config {} ';' | sort >> ${PKG}/install/doinst.sh
  echo >> ${PKG}/install/doinst.sh
)

sed -i "s|_PACKAGER|${PACKAGER}|g; s|_BUILD_DATE|${DATE}|g" \
       ${PKG}/install/slack-desc

if [ "${SB_REP}" = "YES" ] ;then
  # Replicate slackbuild and patches
  mkdir -p ${SBDIR}/patches
  install -m0644 ${CWD}/slack-desc ${CWD}/slack-required ${CWD}/ChangeLog.SB \
    ${CWD}/apply-patches.sh ${SBDIR}/
  install -m0755 ${CWD}/${NAME}.SlackBuild \
    ${SBDIR}/${NAME}.SlackBuild
  install -m0644 ${CWD}/patches/*.* \
    ${SBDIR}/patches/
  rmdir ${SBDIR}/patches
fi

# Build package:
set +o xtrace        # no longer print commands upon execution
set -e

ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root . ; "

ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --prepend --linkadd y --chown n ${PKGDEST}/${PKGNAME}.${PKGFORMAT} "

if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning..."
  if [ -d ${TMP}/${SRCDIR} ]; then
    rm -rf ${TMP}/${SRCDIR} && echo "${TMP}/${SRCDIR} cleanup completed"
  fi
  if [ -d ${PKG} ]; then
    rm -rf ${PKG} && echo "${PKG} cleanup completed"
  fi
  rmdir ${TMP} && echo "${TMP} cleanup completed"
fi
exit 0
